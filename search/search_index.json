{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Formatos de Tabela para Data Lakes \u00b6 Bem-vindo \u00e0 documenta\u00e7\u00e3o sobre formatos de tabela para data lakes , com foco nos dois principais formatos: Delta Lake e Apache Iceberg . Esta documenta\u00e7\u00e3o foi criada para apresentar os conceitos, opera\u00e7\u00f5es e funcionalidades desses formatos de forma pr\u00e1tica, por meio de notebooks Python. Objetivo \u00b6 Nosso objetivo \u00e9 fornecer uma vis\u00e3o clara e comparativa entre Delta Lake e Apache Iceberg, auxiliando profissionais e entusiastas de engenharia de dados a entenderem suas diferen\u00e7as, pontos fortes e como utiliz\u00e1-los em ambientes reais. Autores \u00b6 Edrik & Eryc Conte\u00fado \u00b6 A documenta\u00e7\u00e3o est\u00e1 dividida nas seguintes se\u00e7\u00f5es: Delta Lake \u00b6 Explore as principais opera\u00e7\u00f5es com Delta Lake, como: INSERT UPDATE DELETE Apache Iceberg \u00b6 Conhe\u00e7a as opera\u00e7\u00f5es fundamentais com Apache Iceberg, incluindo: INSERT UPDATE DELETE Esta documenta\u00e7\u00e3o tamb\u00e9m \u00e9 enriquecida com exemplos pr\u00e1ticos, exibidos atrav\u00e9s de notebooks interativos, para ilustrar o uso dos formatos em pipelines de dados modernos.","title":"Formatos de Tabela para Data Lakes"},{"location":"#formatos-de-tabela-para-data-lakes","text":"Bem-vindo \u00e0 documenta\u00e7\u00e3o sobre formatos de tabela para data lakes , com foco nos dois principais formatos: Delta Lake e Apache Iceberg . Esta documenta\u00e7\u00e3o foi criada para apresentar os conceitos, opera\u00e7\u00f5es e funcionalidades desses formatos de forma pr\u00e1tica, por meio de notebooks Python.","title":"Formatos de Tabela para Data Lakes"},{"location":"#objetivo","text":"Nosso objetivo \u00e9 fornecer uma vis\u00e3o clara e comparativa entre Delta Lake e Apache Iceberg, auxiliando profissionais e entusiastas de engenharia de dados a entenderem suas diferen\u00e7as, pontos fortes e como utiliz\u00e1-los em ambientes reais.","title":"Objetivo"},{"location":"#autores","text":"Edrik & Eryc","title":"Autores"},{"location":"#conteudo","text":"A documenta\u00e7\u00e3o est\u00e1 dividida nas seguintes se\u00e7\u00f5es:","title":"Conte\u00fado"},{"location":"#delta-lake","text":"Explore as principais opera\u00e7\u00f5es com Delta Lake, como: INSERT UPDATE DELETE","title":"Delta Lake"},{"location":"#apache-iceberg","text":"Conhe\u00e7a as opera\u00e7\u00f5es fundamentais com Apache Iceberg, incluindo: INSERT UPDATE DELETE Esta documenta\u00e7\u00e3o tamb\u00e9m \u00e9 enriquecida com exemplos pr\u00e1ticos, exibidos atrav\u00e9s de notebooks interativos, para ilustrar o uso dos formatos em pipelines de dados modernos.","title":"Apache Iceberg"},{"location":"delta-lake/operations/","text":"Opera\u00e7\u00f5es com Delta Lake \u00b6 Este documento apresenta exemplos pr\u00e1ticos de como realizar opera\u00e7\u00f5es b\u00e1sicas em tabelas Delta Lake utilizando PySpark e Spark SQL. INSERT \u00b6 A opera\u00e7\u00e3o de INSERT insere novos registros em uma tabela Delta Lake. spark.sql(\"INSERT INTO carro_delta VALUES (1, 'XYZ1J34'), (2, 'RLC5B93'), (3, 'ABV1V23')\") Esse comando insere tr\u00eas registros na tabela carro_delta . UPDATE \u00b6 A opera\u00e7\u00e3o de UPDATE permite modificar registros existentes com base em uma condi\u00e7\u00e3o. spark.sql( \"\"\" update carro_delta set marca = 'Renault', modelo = 'Sandero', ano = 2021 where id = 1 \"\"\" ) spark.sql('update carro_delta set marca=\"GM\", modelo=\"tracker\", ano=2020 where id = 2') spark.sql('update carro_delta set marca=\"Ford\", modelo=\"EcoSport\", ano=2022 where id = 3') Esses comandos atualizam os campos marca , modelo e ano dos registros com base no id . DELETE \u00b6 A opera\u00e7\u00e3o de DELETE remove registros de uma tabela Delta Lake com base em uma condi\u00e7\u00e3o. spark.sql(\"DELETE FROM carro_delta WHERE id = 1\") Esse comando remove o registro com id = 1 da tabela carro_delta . Observa\u00e7\u00e3o: O suporte a comandos DELETE depende da vers\u00e3o do Delta Lake e da configura\u00e7\u00e3o do ambiente Spark.","title":"Opera\u00e7\u00f5es com Delta Lake"},{"location":"delta-lake/operations/#operacoes-com-delta-lake","text":"Este documento apresenta exemplos pr\u00e1ticos de como realizar opera\u00e7\u00f5es b\u00e1sicas em tabelas Delta Lake utilizando PySpark e Spark SQL.","title":"Opera\u00e7\u00f5es com Delta Lake"},{"location":"delta-lake/operations/#insert","text":"A opera\u00e7\u00e3o de INSERT insere novos registros em uma tabela Delta Lake. spark.sql(\"INSERT INTO carro_delta VALUES (1, 'XYZ1J34'), (2, 'RLC5B93'), (3, 'ABV1V23')\") Esse comando insere tr\u00eas registros na tabela carro_delta .","title":"INSERT"},{"location":"delta-lake/operations/#update","text":"A opera\u00e7\u00e3o de UPDATE permite modificar registros existentes com base em uma condi\u00e7\u00e3o. spark.sql( \"\"\" update carro_delta set marca = 'Renault', modelo = 'Sandero', ano = 2021 where id = 1 \"\"\" ) spark.sql('update carro_delta set marca=\"GM\", modelo=\"tracker\", ano=2020 where id = 2') spark.sql('update carro_delta set marca=\"Ford\", modelo=\"EcoSport\", ano=2022 where id = 3') Esses comandos atualizam os campos marca , modelo e ano dos registros com base no id .","title":"UPDATE"},{"location":"delta-lake/operations/#delete","text":"A opera\u00e7\u00e3o de DELETE remove registros de uma tabela Delta Lake com base em uma condi\u00e7\u00e3o. spark.sql(\"DELETE FROM carro_delta WHERE id = 1\") Esse comando remove o registro com id = 1 da tabela carro_delta . Observa\u00e7\u00e3o: O suporte a comandos DELETE depende da vers\u00e3o do Delta Lake e da configura\u00e7\u00e3o do ambiente Spark.","title":"DELETE"},{"location":"iceberg/operations/","text":"Opera\u00e7\u00f5es com Apache Iceberg \u00b6 Este documento apresenta exemplos pr\u00e1ticos de como realizar opera\u00e7\u00f5es b\u00e1sicas em tabelas Apache Iceberg utilizando PySpark e Spark SQL. INSERT \u00b6 A opera\u00e7\u00e3o de INSERT insere novos registros em uma tabela Iceberg. spark.sql(\"INSERT INTO local.carro_iceberg VALUES (1, 'XYZ1J34'), (2, 'RLC5B93'), (3, 'ABV1V23')\") Esse comando insere tr\u00eas registros na tabela carro_iceberg . UPDATE \u00b6 A opera\u00e7\u00e3o de UPDATE permite modificar registros existentes com base em uma condi\u00e7\u00e3o. spark.sql( \"\"\" update local.carro_iceberg set marca = 'Renault', modelo = 'Sandero', ano = 2021 where id = 1 \"\"\" ) spark.sql('update local.carro_iceberg set marca=\"GM\", modelo=\"tracker\", ano=2020 where id = 2') spark.sql('update local.carro_iceberg set marca=\"Ford\", modelo=\"EcoSport\", ano=2022 where id = 3') Esses comandos atualizam os campos marca , modelo e ano dos registros com base no id . DELETE \u00b6 A opera\u00e7\u00e3o de DELETE remove registros de uma tabela Iceberg com base em uma condi\u00e7\u00e3o. spark.sql('delete from local.carro_iceberg where id = 3') Esse comando remove o registro com id = 3 da tabela carro_iceberg . Observa\u00e7\u00e3o: O Apache Iceberg tamb\u00e9m oferece suporte a opera\u00e7\u00f5es de remo\u00e7\u00e3o com filtros mais complexos, desde que o engine utilizado suporte a sintaxe SQL compat\u00edvel.","title":"Opera\u00e7\u00f5es com Apache Iceberg"},{"location":"iceberg/operations/#operacoes-com-apache-iceberg","text":"Este documento apresenta exemplos pr\u00e1ticos de como realizar opera\u00e7\u00f5es b\u00e1sicas em tabelas Apache Iceberg utilizando PySpark e Spark SQL.","title":"Opera\u00e7\u00f5es com Apache Iceberg"},{"location":"iceberg/operations/#insert","text":"A opera\u00e7\u00e3o de INSERT insere novos registros em uma tabela Iceberg. spark.sql(\"INSERT INTO local.carro_iceberg VALUES (1, 'XYZ1J34'), (2, 'RLC5B93'), (3, 'ABV1V23')\") Esse comando insere tr\u00eas registros na tabela carro_iceberg .","title":"INSERT"},{"location":"iceberg/operations/#update","text":"A opera\u00e7\u00e3o de UPDATE permite modificar registros existentes com base em uma condi\u00e7\u00e3o. spark.sql( \"\"\" update local.carro_iceberg set marca = 'Renault', modelo = 'Sandero', ano = 2021 where id = 1 \"\"\" ) spark.sql('update local.carro_iceberg set marca=\"GM\", modelo=\"tracker\", ano=2020 where id = 2') spark.sql('update local.carro_iceberg set marca=\"Ford\", modelo=\"EcoSport\", ano=2022 where id = 3') Esses comandos atualizam os campos marca , modelo e ano dos registros com base no id .","title":"UPDATE"},{"location":"iceberg/operations/#delete","text":"A opera\u00e7\u00e3o de DELETE remove registros de uma tabela Iceberg com base em uma condi\u00e7\u00e3o. spark.sql('delete from local.carro_iceberg where id = 3') Esse comando remove o registro com id = 3 da tabela carro_iceberg . Observa\u00e7\u00e3o: O Apache Iceberg tamb\u00e9m oferece suporte a opera\u00e7\u00f5es de remo\u00e7\u00e3o com filtros mais complexos, desde que o engine utilizado suporte a sintaxe SQL compat\u00edvel.","title":"DELETE"}]}